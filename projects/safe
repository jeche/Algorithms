    j = m;
    double start31 = user_time() + system_time();
    j.insertion_sort();
    double finish41 = user_time() + system_time();
    j = m;
    double start42 = user_time() + system_time();
    j.heapsort();
    double finish42 = user_time() + system_time();
    j = m;
    double start43 = user_time() + system_time();
    j.min_heap_select(;
    double finish33 = user_time() + system_time();
    j = m;
    double start34 = user_time() + system_time();
    j.mergesort();
    double finish34 = user_time() + system_time();
    j = m;
    double start35 = user_time() + system_time();
    j.quick_choose_first();
    double finish35 = user_time() + system_time();
    j = m;
    double start36 = user_time() + system_time();
    j.quick_choose_middle();
    double finish36 = user_time() + system_time();
    j = m;
    double start37 = user_time() + system_time();
    j.quick_choose_last();
    double finish37 = user_time() + system_time();