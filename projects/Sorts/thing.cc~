#include <iostream>
#include <vector>
using namespace std;
int getInvCount(vector<int> &arr, int n)
{
  int inv_count = 0;
  int i, j;
 
  for(i = 0; i < n - 1; i++)
    for(j = i+1; j < n; j++)
      if(arr[i] > arr[j])
        inv_count++;
 
  return inv_count;
}

int merge(vector<int> & a, vector<int> & tmpArray, int leftPos, int rightPos, int rightEnd)
{
  int leftEnd = rightPos - 1;
  int tmpPos = leftPos;
  int numElements = rightEnd - leftPos + 1;
  
  // Main loop
  int count = 0;
  while( leftPos <= leftEnd && rightPos <= rightEnd)
    if(a[leftPos] <= a[rightPos])
    {
      tmpArray[tmpPos++] = a[leftPos++];
      //cout <<"FIRST IF " << tmpArray[0] <<"& " << tmpArray[1]<<"& " << tmpArray[2]<<"& " << tmpArray[3]<<"& " << tmpArray[4]<<"& "<< tmpArray[5]<<"& "<< tmpArray[6]<<"& "<< tmpArray[7]<<"& "<< tmpArray[8] <<"& "<< tmpArray[9]<<"& "<< tmpArray[10]<<"& "<< tmpArray[11]<< endl;
    }
    else
    {
      tmpArray[tmpPos++] = a[rightPos++];
      //cout <<"THE ELSE " << tmpArray[0] <<"& " << tmpArray[1]<<"& " << tmpArray[2]<<"& " << tmpArray[3]<<"& " << tmpArray[4]<<"& "<< tmpArray[5]<<"& "<< tmpArray[6]<<"& "<< tmpArray[7]<<"& "<< tmpArray[8] <<"& "<< tmpArray[9]<<"& "<< tmpArray[10]<<"& "<< tmpArray[11]<< endl;
      count++;
    }
    
  while(leftPos <= leftEnd)
    tmpArray[tmpPos++] = a[leftPos++];
  
  while(rightPos <= rightEnd)
    tmpArray[tmpPos++] = a[rightPos++];

  for( int i = 0; i < numElements; i++, rightEnd--)
  {a[rightEnd] = tmpArray[rightEnd];//cout<<a[0] <<"& " << a[1]<<"& " << a[2]<<"& " << a[3]<<"& " << a[4]<<"& "<< a[5]<<"& "<< a[6]<<"& "<< a[7]<<"& "<< a[8] <<"& "<< a[9]<<"& "<< a[10]<<"& "<< a[11]<< endl;
    
  }
  return count;
}

void mergeSort( vector<int> & a, vector<int> & tmpArray, int left, int right)
{
  if( left <right)
  {
    int center = (left + right) /2;
    mergeSort(a, tmpArray, left, center);
    mergeSort(a, tmpArray, center + 1, right);
    int k = merge(a, tmpArray, left, center + 1 , right);
    cout<<a[0] <<"& " << a[1]<<"& " << a[2]<<"& " << a[3]<<"& " << a[4]<<"& "<< a[5]<<"& "<< a[6]<<"& "<< a[7]<<"& "<< a[8] <<"& "<< a[9]<<"& "<< a[10]<<"& "<< a[11]<<"&" << k <<"&" << getInvCount(a, 12)<< "\\" << "\\"<<  endl;
  }
}

int main()
{
//vector<int> v(55);
//vector<int> tmpArray(55);
int v [55] = {26, 33, 88, 49, 102, 58, 78, 115, 101, 66, 59, 68, 67, 54, 83, 27, 98, 28, 94, 32, 71, 22, 42, 37, 105, 39, 44, 45, 81, 93, 24, 50, 95, 61, 41, 74, 99, 96, 70, 85, 69, 110, 104, 89, 79, 77, 57, 63, 60, 62, 43, 53, 51, 56, 55};
int j[28];
int k[28];
int jc = 0;
int kc = 0;
for(int m = 0; m <28; m++){
 j[m] = 0;
 k[m] = 0;
}
//mergeSort(v, tmpArray, 0, 12 -1);
for(int i = 0; i < 55; i++){
//cout << v[i] <<"& " << v[i+5]<<"& " << v[i+10]<<"& " << v[i+15]<<"& " << v[i+20]<<"& "<< v[i+25]<<"& "<< v[i+30]<<"& "<< v[i+35]<<"& "<< v[i+40] <<"& "<< v[i+45]<<"& "<< v[i +50]<<"\\\\ "<< endl;
if(v[i] < 53)
{
  j[jc] = v[i];
  jc++;
}
if(v[i] > 53)
{
  k[kc] = v[i];
  kc++;
}
}

for(int u = 0; u < 15; u= u + 5){
 cout << k[u] <<"& " << k[u+1]<<"& " << k[u+2]<<"& " << k[u+3]<<"& " << k[u+4]<<"\\\\ "<< endl;
}
return 0;
}